<project><actions/><description>Launch a stack</description><logRotator class="hudson.tasks.LogRotator"><daysToKeep>-1</daysToKeep><numToKeep>20</numToKeep><artifactDaysToKeep>-1</artifactDaysToKeep><artifactNumToKeep>-1</artifactNumToKeep></logRotator><keepDependencies>false</keepDependencies><properties><hudson.plugins.copyartifact.CopyArtifactPermissionProperty plugin="copyartifact@1.30"><projectNameList><string>staging</string></projectNameList></hudson.plugins.copyartifact.CopyArtifactPermissionProperty></properties><scm class="hudson.scm.NullSCM"/><canRoam>true</canRoam><disabled>false</disabled><blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding><blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding><triggers><hudson.triggers.TimerTrigger><spec>H/2 * * * *</spec></hudson.triggers.TimerTrigger></triggers><concurrentBuild>false</concurrentBuild><builders><hudson.tasks.Shell><command>#!/bin/bash -xe
export OS_AUTH_URL=http://10.135.126.20:5000/v2.0
export OS_USERNAME=admin
export OS_PASSWORD=cloud
export OS_TENANT_NAME=demo
cur=`pwd`

REPOSERVER="10.135.126.20"
LAST_TESTED=0
if [ -e lastAT ]
then
    LAST_TESTED=`cat lastAT | cut -d'v' -f2`
fi
wget http://$REPOSERVER:81/snapshots/latest-snapshot --no-cache
REPOLATEST=`cat latest-snapshot | cut -d'v' -f2`
rm -f latest-snapshot 2> /dev/null

if [ $LAST_TESTED -eq $REPOLATEST ]; then
    echo "nothing new to test"
    exit 0
elif [ $LAST_TESTED -gt $REPOLATEST ]; then
    echo "LAST_TESTED is greater than REPOLATEST!!"
    exit 2
fi

echo "$REPOLATEST" > lastAT


template=/home/openstack/opt/custom-templates/devstack4.yaml
/usr/local/bin/heat stack-create  -f $template stack${BUILD_NUMBER}

status=`/usr/local/bin/heat stack-list | grep stack${BUILD_NUMBER} | awk {' print $6 '}`
echo $status
while [ "$status" == "CREATE_IN_PROGRESS" ]
do
sleep 30
status=`/usr/local/bin/heat stack-list | grep stack${BUILD_NUMBER} | awk {' print $6 '}`
done

if [ "$status" == "CREATE_COMPLETE" ]
then
 echo "AT for Folowing Endpoints Captured"
 echo "\n\n"
 /usr/local/bin/heat resource-metadata stack${BUILD_NUMBER} service1_wait_handle
 #/usr/local/bin/heat resource-metadata stack${BUILD_NUMBER} service1_wait_handle > $cur/endpoints
 #Simulating AT"
 vmip=`nova list | grep stack${BUILD_NUMBER} | awk {'print $12'} | cut -d= -f2 | cut -d, -f1`
 rm -rf test
 wget http://$vmip:81/test --no-cache
 AT=`cat test  | tail -n 1 | cut -d: -f2`
 if [ "$AT" = "true" ]
 then
  echo "Acceptance Test is Successfull"
  echo $REPOLATEST > lastAT-success
 else
  echo "Acceptance Test Failed"
 fi
fi
heat stack-delete stack${BUILD_NUMBER}

</command></hudson.tasks.Shell></builders><publishers><hudson.tasks.ArtifactArchiver><artifacts>lastAT,lastAT-success</artifacts><latestOnly>false</latestOnly><allowEmptyArchive>false</allowEmptyArchive><onlyIfSuccessful>false</onlyIfSuccessful></hudson.tasks.ArtifactArchiver></publishers><buildWrappers/></project>
